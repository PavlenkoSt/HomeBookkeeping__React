{"version":3,"sources":["Components/Journal/Journaltem/Journaltem.module.css","Components/Reports/GeneralSum/GeneralSum.module.css","Components/Add/AddForm/AddForm.module.css","Components/Subheader/Item/Item.module.css","Components/Add/AddForm/FieldCreator/FormControl.module.css","Components/Journal/Journal.module.css","Components/Reports/Reports.module.css","Components/Add/Add.module.css","Components/Planning/Planning.module.css","Components/Limits/Limits.module.css","Components/Reports/ReportsNav/Select/Select.module.css","Components/Reports/ReportsInfo/ReportsInfo.module.css","Components/Reports/Chart/Chart.module.css","Components/Planning/AddPlanForm/AddPlanForm.module.css","Components/Add/AddForm/FieldCreator/FieldCreator.module.css","Components/Limits/LimitItem/LimitItem.module.css","reportWebVitals.ts","Redux/billReducer.ts","Redux/headerReducer.ts","helpers/dateValid.ts","Redux/chartReducer.ts","Redux/budgetReducer.ts","Redux/reduxStore.ts","Redux/selectors/billSelectors.ts","Redux/selectors/headerSelectors.ts","Components/Header/Header.tsx","Components/Subheader/Item/Item.tsx","Components/Subheader/Subheader.tsx","localStore/localStore.ts","Components/Journal/Journaltem/Journaltem.tsx","Components/Journal/Journal.tsx","Redux/selectors/chartSelectors.ts","Components/Reports/ReportsNav/Buttons/Buttons.tsx","Components/Reports/ReportsNav/Select/Select.tsx","Components/Reports/ReportsNav/ReportsNav.tsx","Components/Reports/ReportsInfo/ReportsInfoItem/ReportsInfoItem.tsx","Components/Reports/ReportsInfo/ReportsInfo.tsx","Components/Reports/GeneralSum/GeneralSum.tsx","Components/Reports/Chart/RenderActiveShape.tsx","Components/Reports/Chart/Chart.tsx","Components/Reports/Chart/ChartContainer.tsx","Components/Reports/Reports.tsx","helpers/currentDate.ts","Components/Add/AddForm/FieldCreator/FieldCreator.tsx","utilts/validators.ts","Components/Add/AddForm/AddForm.tsx","Components/Add/Add.tsx","Components/ModalBill/ModalForm/ModalForm.tsx","Components/ModalBill/ModalBill.tsx","helpers/manageFormClasses.ts","Components/Planning/AddPlanForm/AddPlanForm.tsx","Redux/selectors/budgetSelectors.ts","Components/Planning/PlanItem/PlanItem.tsx","Components/Planning/Planning.tsx","Components/Limits/AddLimitForm/AddLimitForm.tsx","Components/Limits/LimitItem/LimitItem.tsx","Components/Limits/Limits.tsx","HOC/withTransition.tsx","Components/common/Preloader/Preloader.tsx","App.tsx","index.tsx","Components/Header/Header.module.css","helpers/manageFormClasses.module.css","Components/Reports/ReportsNav/Buttons/Buttons.module.css","Components/Planning/PlanItem/PlanItem.module.css","Components/ModalBill/ModalBill.module.css","Components/Limits/AddLimitForm/AddLimitForm.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CHANGE_ADD_MODE","INCOME_TO_BILL","OUTCOM_FROM_BILL","SET_NEW_TRANSACTION","DELETE_TRANSACTION","SYNHRONIZED_HISTORY_TRANSACTION_FROM_LOCAL_STORAGE","SYNHRONIZED_BILL_FROM_LOCAL_STORAGE","CHANGE_BILL","CHANGE_LOAD_STATUS","incomeToBill","sum","type","outcomeFromBill","changeAddMode","addModePlus","initialValue","bill","historyTransactions","load","billReducer","state","action","transactionItem","filter","transaction","id","history","CHANGE_REDIRECT_PATH","CHANGE_MODAL_MODE","changeModalMode","mode","paths","text","to","childLinks","autoRedirect","page","redirect","modalMode","headerReducer","redirectItem","item","path","removeZero","num","dateValid","selectVal","date","curDate","Date","arr","split","dateTransact","reverse","join","getDate","getMonth","getFullYear","weekStart","monthStart","yearStart","CHANGE_SHOW_MODE_INCOME","CHANGE_SHOW_TIME_MODE","SET_FILTERED_TRANSACTIONS","SET_ACTIVE_CATEGORY","CHANGE_GENERAL_SUM","setFilteredTransactions","allTransactions","showModeIncome","showTimeMode","filteredItems","activeCategory","generalSum","crartReducer","category","DELETE_PLAN","CHANGE_COMPLETED_STATUS","ADD_NEW_PLAN","SYNHRONIZED_PLANS_FROM_LOCAL_STORAGE","DELETE_LIMIT","ADD_NEW_LIMIT","SYNHRONIZED_LIMITS_FROM_LOCAL_STORAGE","plans","limits","budgetReducer","plan","map","completed","status","limit","reducers","combineReducers","header","chart","chartReducer","budget","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","billSelector","addModePlusSelector","historyTransactionsSelector","loadSelector","pathsSelector","autoRedirectSelector","modalModeSelector","withRouter","location","burger","React","createRef","dispatch","useDispatch","useSelector","navs","activeClass","pathname","match","s","active","className","link","toggleNav","$this","this","classList","toggle","parentElement","childNodes","show","marginHeader","useEffect","current","addEventListener","ref","line","nav","onClick","cur","filteredLink","subheaderLinks","subpath","isOpenPage","child","pathObj","length","Subheader","component","Item","localStore","set","name","obj","json","JSON","stringify","localStorage","setItem","get","getItem","parse","TableItem","desc","income","outcome","incomeBtn","outcomeBtn","deleteTransactionSuccess","M","toast","html","Journal","noRecords","tableItems","Journaltem","tableJournal","showModeIncomeSelector","showTimeModeSelector","filteredItemsSelector","activeCategorySelector","generalSumSelector","Buttons","showModeChange","btns","btn","plus","minus","Select","elems","document","querySelectorAll","FormSelect","init","selectContainer","value","onChange","e","target","ReportsNav","ReportsInfoItem","ReportsInfo","filteredTransactions","list","table","GeneralSum","bgColorClass","reduce","acc","general","renderActiveShape","props","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","Sector","d","stroke","r","toFixed","Chart","data","onPieEnter","activeIndex","useState","setinnerRadius","setOuterRadius","resizeHandler","innerWidth","removeEventListener","PieChart","width","height","Pie","activeShape","dataKey","onMouseEnter","ChartContainer","setActiveIndex","useCallback","_","index","forEach","i","findIndex","has","push","Reports","container","main","addZero","getCurrentDate","day","month","year","FormControl","meta","children","hasError","touched","error","formControlStyle","formControls","errorMessage","Input","input","restProps","FieldCreator","validators","label","span","Field","onFocus","labels","add","setPlus","setMinus","onBlur","remove","none","validate","autoComplete","required","undefined","AddForm","memo","handleSubmit","valid","formRef","clearInputsClasses","el","fieldStyles","reset","onSubmit","btnPlus","btnMinus","reduxForm","Add","formData","now","setNewTransactionSuccess","initialize","newBill","okBtn","ModalBill","defaultHeaderText","TransitionGroup","CSSTransition","classNames","timeout","layout","modal","closeBtn","changeBill","removeSet","addSet","AddPlanForm","inputsGroup","manageFormClasses","submit","plansSelector","limitsSelector","PlanItem","progress","round","progressBar","changeCompletedStatus","checked","title","subline","style","deletePlan","removeBtn","Planning","planItems","task","noPlans","s2","LimitItem","currentCategorySum","deadline","targetTransaction","toString","transactionDate","currentDate","endDate","days","ceil","progressLineWidth","alert","orange","red","deleteLimit","Limits","limitItems","noLimits","withTransition","Component","in","unmountOnExit","Preloader","App","synhronizedHistoryTransactionFromLocalStorage","synhronizedBillFromLocalStorage","synhronizedPlansFromLocalStorage","synhronizedLimitsFromLocalStorage","changeLoadStatus","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.69cb07c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"income\":\"Journaltem_income__3tOE1\",\"outcome\":\"Journaltem_outcome___6kti\",\"incomeBtn\":\"Journaltem_incomeBtn__2Vucr\",\"outcomeBtn\":\"Journaltem_outcomeBtn__PoCmD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"general\":\"GeneralSum_general__22KEA\",\"sum\":\"GeneralSum_sum__2_Nzs\",\"plus\":\"GeneralSum_plus__MRC3y\",\"minus\":\"GeneralSum_minus__3IAD4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddForm_form__1ragg\",\"btn\":\"AddForm_btn__3HkoJ\",\"btnPlus\":\"AddForm_btnPlus__1zO4D\",\"btnMinus\":\"AddForm_btnMinus__h7iwI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Item_nav__3hXn5\",\"link\":\"Item_link__Ovqmg\",\"active\":\"Item_active__3tKuo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControls\":\"FormControl_formControls__36Su_\",\"error\":\"FormControl_error__rpxW3\",\"errorMessage\":\"FormControl_errorMessage__3f8Dv\",\"errorForm\":\"FormControl_errorForm__3Etv3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noRecords\":\"Journal_noRecords__sIUko\",\"tableJournal\":\"Journal_tableJournal__2aIzo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Reports_container__2QOg8\",\"main\":\"Reports_main__Sj5Sg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Add_container__3jjOD\",\"date\":\"Add_date__2gKqf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Planning_container__Y3Dey\",\"noPlans\":\"Planning_noPlans__3vIM2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Limits_container__4OU3k\",\"noLimits\":\"Limits_noLimits__2sJbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectContainer\":\"Select_selectContainer__fbk1t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"ReportsInfo_table__20wAE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noRecords\":\"Chart_noRecords__tDAD7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddPlanForm_form__3bUY6\",\"inputsGroup\":\"AddPlanForm_inputsGroup__oDUOu\",\"label\":\"AddPlanForm_label__1k0i8\",\"span\":\"AddPlanForm_span__1LwJF\",\"input\":\"AddPlanForm_input__1AE9y\",\"submit\":\"AddPlanForm_submit__3yNso\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FieldCreator_label__2X2st\",\"span\":\"FieldCreator_span__2HnvZ\",\"input\":\"FieldCreator_input__2ChlB\",\"set\":\"FieldCreator_set__1Ypoz\",\"setMinus\":\"FieldCreator_setMinus__1T506\",\"setPlus\":\"FieldCreator_setPlus__wH8fu\",\"disabled\":\"FieldCreator_disabled__2NJBo\",\"none\":\"FieldCreator_none__Snfyl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"LimitItem_item__3o2sk\",\"category\":\"LimitItem_category__s37hu\",\"days\":\"LimitItem_days__3tf-9\",\"progress\":\"LimitItem_progress__3Tap-\",\"line\":\"LimitItem_line__1sqsL\",\"subline\":\"LimitItem_subline__2gmmB\",\"orange\":\"LimitItem_orange__2Oocf\",\"red\":\"LimitItem_red__2jOhZ\",\"limit\":\"LimitItem_limit__raX8Y\",\"removeBtn\":\"LimitItem_removeBtn__3A6zC\",\"alert\":\"LimitItem_alert__3lxgK\"};","const reportWebVitals = (onPerfEntry?: any) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    });\n  }\n};\n\nexport default reportWebVitals\n","import { TransactionType } from './chartReducer';\r\n\r\n\r\nconst CHANGE_ADD_MODE = 'CHANGE_ADD_MODE'\r\nconst INCOME_TO_BILL = 'INCOME_TO_BILL'\r\nconst OUTCOM_FROM_BILL = 'OUTCOM_FROM_BILL'\r\nconst SET_NEW_TRANSACTION = 'SET_NEW_TRANSACTION'\r\nconst DELETE_TRANSACTION = 'DELETE_TRANSACTION'\r\nconst SYNHRONIZED_HISTORY_TRANSACTION_FROM_LOCAL_STORAGE = 'SYNHRONIZED_HISTORY_TRANSACTION_FROM_LOCAL_STORAGE'\r\nconst SYNHRONIZED_BILL_FROM_LOCAL_STORAGE = 'SYNHRONIZED_BILL_FROM_LOCAL_STORAGE'\r\nconst CHANGE_BILL = 'CHANGE_BILL'\r\nconst CHANGE_LOAD_STATUS = 'CHANGE_LOAD_STATUS'\r\n\r\nexport const incomeToBill = (sum: string) => ({ type: INCOME_TO_BILL, sum })\r\nexport const outcomeFromBill = (sum: string) => ({ type: OUTCOM_FROM_BILL, sum })\r\nexport const changeAddMode = (addModePlus: boolean) => ({ type: CHANGE_ADD_MODE, addModePlus })\r\nexport const setNewTransactionSuccess = (transactionItem: TransactionType) => ({ type: SET_NEW_TRANSACTION, transactionItem })\r\nexport const deleteTransactionSuccess = (id: number) => ({ type: DELETE_TRANSACTION, id})\r\nexport const synhronizedHistoryTransactionFromLocalStorage = (history: Array<TransactionType>) => ({ type: SYNHRONIZED_HISTORY_TRANSACTION_FROM_LOCAL_STORAGE, history })\r\nexport const synhronizedBillFromLocalStorage = (bill: number) => ({ type: SYNHRONIZED_BILL_FROM_LOCAL_STORAGE, bill })\r\nexport const changeBill = (bill: number) => ({ type: CHANGE_BILL, bill })\r\nexport const changeLoadStatus = (load: boolean) => ({ type: CHANGE_LOAD_STATUS, load })\r\n\r\nconst initialValue = {\r\n    bill: 0,\r\n    addModePlus: true,\r\n    historyTransactions: [],\r\n    load: false\r\n}\r\n\r\nconst billReducer = (state = initialValue, action: any) => {\r\n    switch(action.type){\r\n        case CHANGE_ADD_MODE: {\r\n            return {\r\n                ...state, \r\n                addModePlus: action.addModePlus\r\n            }\r\n        }\r\n        case SET_NEW_TRANSACTION: {\r\n            return {\r\n                ...state,\r\n                historyTransactions: [...state.historyTransactions, action.transactionItem]\r\n            }\r\n        }\r\n        case DELETE_TRANSACTION: {\r\n            return {\r\n                ...state,\r\n                historyTransactions: state.historyTransactions.filter((transaction: TransactionType) => transaction.id !== action.id)\r\n            }\r\n        }\r\n        case SYNHRONIZED_HISTORY_TRANSACTION_FROM_LOCAL_STORAGE: {\r\n            return {\r\n                ...state,\r\n                historyTransactions: action.history\r\n            }\r\n        }\r\n        case SYNHRONIZED_BILL_FROM_LOCAL_STORAGE: {\r\n            return {\r\n                ...state,\r\n                bill: action.bill\r\n            }\r\n        }\r\n        case INCOME_TO_BILL: {\r\n            return {\r\n                ...state,\r\n                bill: +state.bill + +action.sum\r\n            }\r\n        }\r\n        case OUTCOM_FROM_BILL: {\r\n            return {\r\n                ...state,\r\n                bill: +state.bill - +action.sum\r\n            }\r\n        }\r\n        case CHANGE_BILL: {\r\n            return {\r\n                ...state,\r\n                bill: action.bill\r\n            }\r\n        }\r\n        case CHANGE_LOAD_STATUS: {\r\n            return {\r\n                ...state,\r\n                load: action.load\r\n            }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default billReducer","const CHANGE_REDIRECT_PATH = 'CHANGE_REDIRECT_PATH'\r\nconst CHANGE_MODAL_MODE = 'CHANGE_MODAL_MODE'\r\n\r\nexport const changeRedirectPath = (page: string, path: string) => ({ type: CHANGE_REDIRECT_PATH , page, path})\r\nexport const changeModalMode = (mode: boolean) => ({ type: CHANGE_MODAL_MODE , mode})\r\n\r\nexport type PathType = {\r\n    id: number\r\n    text: string\r\n    to: string\r\n    childLinks: Array<ChildLinkType>\r\n}\r\n\r\nexport type RedirectType = {\r\n    page: string\r\n    redirect: string\r\n}\r\n\r\ntype ChildLinkType = {\r\n    id: number\r\n    text: string\r\n    to: string\r\n}\r\n\r\nconst initialValue = {\r\n    paths: [\r\n        {id: 0, text: 'Добавить', to: '/add', childLinks: [\r\n                { id: 0, text: 'Доход', to: '/add/income' },\r\n                { id: 1, text: 'Расход', to: '/add/outcome' }\r\n            ]}, \r\n        {id: 1, text: 'Статистика', to: '/statistics', childLinks: [\r\n            { id: 0, text: 'Журнал', to: '/statistics/journal' },\r\n            { id: 1, text: 'Отчеты', to: '/statistics/reports' }\r\n        ]}, \r\n        {id: 2, text: 'Бюджет', to: '/budget', childLinks: [\r\n            { id: 0, text: 'Планирование', to: '/budget/planning' },\r\n            { id: 1, text: 'Лимиты', to: '/budget/limits' }\r\n        ]}, \r\n    ],\r\n    autoRedirect: [\r\n        {page: '/add', redirect: '/add/income'},\r\n        {page: '/statistics', redirect: '/statistics/journal'},\r\n        {page: '/budget', redirect: '/budget/planning'},\r\n    ],\r\n    modalMode: false,\r\n}\r\n\r\nconst headerReducer = (state = initialValue, action: any) => {\r\n    switch(action.type){\r\n        case CHANGE_REDIRECT_PATH: {\r\n            const redirectItem = state.autoRedirect.filter( item => item.page === action.page)\r\n            return {\r\n                ...state,\r\n                autoRedirect: [...state.autoRedirect, redirectItem[0].redirect = action.path]\r\n            }\r\n        }\r\n        case CHANGE_MODAL_MODE: {\r\n            return {\r\n                ...state,\r\n                modalMode: action.mode\r\n            }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default headerReducer","const removeZero = (num: string) => {\r\n    if (+num <= 9) {\r\n        num = num[1];\r\n    }\r\n    return +num;\r\n}\r\n\r\nconst dateValid = (selectVal: string, date: string) => {\r\n    const curDate = new Date();\r\n    const arr = date.split('.')\r\n    const dateTransact = new Date(arr.reverse().join(','))\r\n    switch (selectVal) {\r\n        case 'day':\r\n            if (removeZero(arr[2]) === curDate.getDate() && removeZero(arr[1]) === curDate.getMonth() + 1 && +arr[0] === curDate.getFullYear()) {\r\n                return true;\r\n            }\r\n            return false;\r\n        case 'week':\r\n            const weekStart = new Date(curDate.getFullYear(), curDate.getMonth(), curDate.getDate() - 7);\r\n            //@ts-ignore\r\n            if (curDate - dateTransact < curDate - weekStart) {\r\n                return true;\r\n            }\r\n            return false;\r\n        case 'month':\r\n            const monthStart = new Date(curDate.getFullYear(), curDate.getMonth() - 1, curDate.getDate());\r\n            //@ts-ignore\r\n            if (curDate - dateTransact < curDate - monthStart) {\r\n                return true;\r\n            }\r\n            return false;\r\n        case 'year':\r\n            const yearStart = new Date(curDate.getFullYear() - 1, curDate.getMonth(), curDate.getDate());\r\n            //@ts-ignore\r\n            if (curDate - dateTransact < curDate - yearStart) {\r\n                return true;\r\n            }\r\n            return false;\r\n        default: \r\n            return false\r\n    }\r\n}\r\n\r\nexport default dateValid","import dateValid from '../helpers/dateValid'\r\n\r\nexport type TransactionType = {\r\n    id: number\r\n    type: string\r\n    sum: string\r\n    category: string\r\n    desc: string\r\n    date: string\r\n}\r\n\r\nconst CHANGE_SHOW_MODE_INCOME = 'CHANGE_SHOW_MODE_INCOME'\r\nconst CHANGE_SHOW_TIME_MODE = 'CHANGE_SHOW_TIME_MODE'\r\nconst SET_FILTERED_TRANSACTIONS = 'SET_FILTERED_TRANSACTIONS'\r\nconst SET_ACTIVE_CATEGORY = 'SET_ACTIVE_CATEGORY'\r\nconst CHANGE_GENERAL_SUM = 'CHANGE_GENERAL_SUM'\r\n\r\nexport const changeShowModeIncome = (mode: boolean) => ({ type: CHANGE_SHOW_MODE_INCOME, mode })\r\nexport const changeShowTimeMode = (mode: string) => ({ type: CHANGE_SHOW_TIME_MODE, mode })\r\nexport const setFilteredTransactions = (allTransactions: Array<TransactionType>) => ({ type: SET_FILTERED_TRANSACTIONS, allTransactions })\r\nexport const setActiveCategory = (category: string) => ({ type: SET_ACTIVE_CATEGORY, category })\r\nexport const changeGeneralSum = (sum: string) => ({ type: CHANGE_GENERAL_SUM, sum })\r\n\r\nconst initialValue = {\r\n    showModeIncome: true,\r\n    showTimeMode: 'day',\r\n    filteredItems: [],\r\n    activeCategory: '',\r\n    generalSum: 0\r\n}\r\n\r\nconst crartReducer = (state = initialValue, action: any) => {\r\n    switch(action.type){\r\n        case CHANGE_SHOW_MODE_INCOME: {\r\n            return {\r\n                ...state,\r\n                showModeIncome: action.mode\r\n            }\r\n        }\r\n        case CHANGE_SHOW_TIME_MODE: {\r\n            return {\r\n                ...state,\r\n                showTimeMode: action.mode\r\n            }\r\n        }\r\n        case SET_FILTERED_TRANSACTIONS: {\r\n            const filteredItems = action.allTransactions.filter((transaction: TransactionType) => {\r\n                if(transaction.type === (state.showModeIncome ? 'income' : 'outcome')){\r\n                    return dateValid(state.showTimeMode, transaction.date)\r\n                }\r\n                return false\r\n            })\r\n            return {\r\n                ...state,\r\n                filteredItems: filteredItems\r\n            }\r\n        }\r\n        case SET_ACTIVE_CATEGORY: {\r\n            return {\r\n                ...state,\r\n                activeCategory: action.category\r\n            }\r\n        }\r\n        case CHANGE_GENERAL_SUM: {\r\n            return {\r\n                ...state,\r\n                generalSum: action.sum\r\n            }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default crartReducer\r\n\r\n","export type PlanType = {\r\n    id: number,\r\n    task: string,\r\n    sum: string,\r\n    completed: boolean\r\n}\r\n\r\nexport type LimitType = {\r\n    id: number,\r\n    category: string,\r\n    limit: string,\r\n    deadline: Array<number>\r\n}\r\n\r\nconst DELETE_PLAN = 'DELETE_PLAN'\r\nconst CHANGE_COMPLETED_STATUS = 'CHANGE_COMPLETED_STATUS'\r\nconst ADD_NEW_PLAN = 'ADD_NEW_PLAN'\r\nconst SYNHRONIZED_PLANS_FROM_LOCAL_STORAGE = 'SYNHRONIZED_PLANS_FROM_LOCAL_STORAGE'\r\nconst DELETE_LIMIT = 'DELETE_LIMIT'\r\nconst ADD_NEW_LIMIT = 'ADD_NEW_LIMIT'\r\nconst SYNHRONIZED_LIMITS_FROM_LOCAL_STORAGE = 'SYNHRONIZED_LIMITS_FROM_LOCAL_STORAGE'\r\n\r\nexport const deletePlan = (id: number) => ({ type: DELETE_PLAN, id })\r\nexport const changeCompletedStatus = (id: number, status: boolean) => ({ type: CHANGE_COMPLETED_STATUS, id, status })\r\nexport const addNewPlan = (plan: PlanType) => ({ type: ADD_NEW_PLAN, plan })\r\nexport const synhronizedPlansFromLocalStorage = (plans: Array<PlanType>) => ({ type: SYNHRONIZED_PLANS_FROM_LOCAL_STORAGE, plans })\r\nexport const deleteLimit = (id: number) => ({ type: DELETE_LIMIT, id })\r\nexport const addNewLimit = (limit: LimitType) => ({ type: ADD_NEW_LIMIT, limit })\r\nexport const synhronizedLimitsFromLocalStorage = (limits: Array<LimitType>) => ({ type: SYNHRONIZED_LIMITS_FROM_LOCAL_STORAGE, limits })\r\n\r\n\r\nconst initialValue = {\r\n    plans: [],\r\n    limits: []\r\n}\r\n\r\nconst budgetReducer = (state = initialValue, action: any) => {\r\n    switch(action.type){\r\n        case DELETE_PLAN: {\r\n            return {\r\n                ...state,\r\n                plans: state.plans.filter((plan: PlanType) => plan.id !== action.id)\r\n            }\r\n        }\r\n        case CHANGE_COMPLETED_STATUS: {\r\n            return {\r\n                ...state,\r\n                plans: state.plans.map((plan: PlanType) => {\r\n                    if(plan.id === action.id){\r\n                        plan.completed = action.status\r\n                    }\r\n                    return plan\r\n                })\r\n            }\r\n        }\r\n        case ADD_NEW_PLAN: {\r\n            return {\r\n                ...state,\r\n                plans: [...state.plans, action.plan ]\r\n            }\r\n        }\r\n        case SYNHRONIZED_PLANS_FROM_LOCAL_STORAGE: {\r\n            return {\r\n                ...state,\r\n                plans: action.plans\r\n            }\r\n        }\r\n        case DELETE_LIMIT: {\r\n            return {\r\n                ...state,\r\n                limits: state.limits.filter((limit: LimitType) => limit.id !== action.id)\r\n            }\r\n        }\r\n        case ADD_NEW_LIMIT: {\r\n            return {\r\n                ...state,\r\n                limits: [...state.limits, action.limit]\r\n            }\r\n        }\r\n        case SYNHRONIZED_LIMITS_FROM_LOCAL_STORAGE: {\r\n            return {\r\n                ...state,\r\n                limits: action.limits\r\n            }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default budgetReducer","import { combineReducers, compose, createStore } from \"redux\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport billReducer from './billReducer'\r\nimport headerReducer from './headerReducer'\r\nimport chartReducer from './chartReducer'\r\nimport budgetReducer from \"./budgetReducer\"\r\n\r\nconst reducers = combineReducers({\r\n    header: headerReducer,\r\n    bill: billReducer,\r\n    chart: chartReducer,\r\n    budget: budgetReducer,\r\n    form: formReducer\r\n})\r\n\r\ntype RootReducerType = typeof reducers\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers())\r\n\r\nexport default store","import { AppStateType } from './../reduxStore'\r\n\r\nexport const billSelector = (state: AppStateType) => state.bill.bill\r\nexport const addModePlusSelector = (state: AppStateType) => state.bill.addModePlus\r\nexport const historyTransactionsSelector = (state: AppStateType) => state.bill.historyTransactions\r\nexport const loadSelector = (state: AppStateType) => state.bill.load","import { AppStateType } from './../reduxStore'\r\n\r\nexport const pathsSelector = (state: AppStateType) => state.header.paths\r\nexport const autoRedirectSelector = (state: AppStateType) => state.header.autoRedirect\r\nexport const modalModeSelector = (state: AppStateType) => state.header.modalMode","import s from './Header.module.css'\r\nimport { NavLink, RouteComponentProps, withRouter } from 'react-router-dom'\r\nimport {  useDispatch, useSelector } from 'react-redux'\r\nimport { changeModalMode } from '../../Redux/headerReducer'\r\nimport React, { FC, useEffect } from 'react'\r\nimport { billSelector } from '../../Redux/selectors/billSelectors'\r\nimport { pathsSelector } from '../../Redux/selectors/headerSelectors'\r\n \r\nconst Header: FC<RouteComponentProps> = ({ location }) => {\r\n    const burger = React.createRef()\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const bill = useSelector(billSelector)\r\n    const paths = useSelector(pathsSelector)\r\n\r\n    const openModal = () => {\r\n        dispatch(changeModalMode(true))\r\n    }\r\n\r\n    const navs = paths.map(path => {\r\n        const activeClass = location.pathname.match(path.to) ? s.active : ''\r\n        return <NavLink key={path.id} className={ `${s.link} ${activeClass}` } to={path.to}>{path.text}</NavLink>\r\n    })\r\n\r\n    function toggleNav(){\r\n        //@ts-ignore\r\n        const $this = this\r\n        $this.classList.toggle(s.active)\r\n        $this.parentElement.childNodes[1].classList.toggle(s.show)\r\n        $this.parentElement.classList.toggle(s.marginHeader)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const burgerBtn = burger.current\r\n        // @ts-ignore\r\n        burgerBtn.addEventListener('click', toggleNav)\r\n    }, [])\r\n\r\n    return (\r\n        <header className={s.header}>\r\n            {/* @ts-ignore */}\r\n            <div ref={burger} className={s.burger}>\r\n                <div className={s.line}></div>\r\n            </div>\r\n            <div className={s.nav}>\r\n                {navs}\r\n            </div>\r\n            <div className={s.bill} onClick={() => openModal()}>\r\n                Текущий баланс:\r\n                <div className={s.cur}>{bill + ' ₴'}</div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default withRouter(Header)\r\n","import { FC } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Redirect, RouteComponentProps, withRouter } from 'react-router'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { changeAddMode } from '../../../Redux/billReducer'\r\nimport { changeRedirectPath, RedirectType } from '../../../Redux/headerReducer'\r\nimport { autoRedirectSelector, pathsSelector } from '../../../Redux/selectors/headerSelectors'\r\nimport s from './Item.module.css'\r\n\r\nconst Item: FC<RouteComponentProps> = ({ location }) => {\r\n    const dispatch = useDispatch()\r\n    const paths = useSelector(pathsSelector)\r\n    const autoRedirect = useSelector(autoRedirectSelector)\r\n\r\n    const filteredLink = paths.filter(path => location.pathname.match(path.to))\r\n\r\n    const subheaderLinks = filteredLink[0].childLinks.map(subpath => {\r\n        const activeClass = location.pathname.match(subpath.to) ? s.active : ''\r\n\r\n        const subheaderItemClick = () => {\r\n            subpath.to === '/add/income' && dispatch(changeAddMode(true))\r\n            subpath.to === '/add/outcome' && dispatch(changeAddMode(false))\r\n            dispatch(changeRedirectPath(filteredLink[0].to, subpath.to))\r\n        }\r\n\r\n        return <NavLink \r\n            onClick={subheaderItemClick} \r\n            key={subpath.id} \r\n            className={`${s.link} ${activeClass}`} \r\n            to={subpath.to}>{subpath.text}</NavLink>\r\n    })\r\n\r\n    const isOpenPage = filteredLink[0].childLinks.filter(child => location.pathname.match(child.to))\r\n    const redirectPath = autoRedirect.filter((pathObj: RedirectType) => pathObj.page === filteredLink[0].to )\r\n    const redirect = redirectPath[0].redirect\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.nav}>\r\n                {subheaderLinks}\r\n            </div>\r\n            {\r\n                !isOpenPage.length ? <Redirect to={redirect} /> : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Item)","import { FC } from \"react\"\r\nimport { Route } from \"react-router\"\r\nimport Item from \"./Item/Item\"\r\n\r\nconst Subheader: FC = () => {\r\n    return (\r\n        <div>\r\n            <Route path='/add' component={Item} />\r\n            <Route path='/statistics' component={Item} />\r\n            <Route path='/budget' component={Item} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subheader","const localStore = {\r\n    set(name: string, obj: any){\r\n        const json = JSON.stringify(obj)\r\n        localStorage.setItem(name, json)\r\n    },\r\n    get(name: string){\r\n        const obj: any = localStorage.getItem(name)\r\n        return JSON.parse(obj)\r\n    }\r\n}\r\n\r\nexport default localStore","import { FC } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport localStore from '../../../localStore/localStore'\r\nimport { deleteTransactionSuccess, incomeToBill, outcomeFromBill } from '../../../Redux/billReducer'\r\nimport { TransactionType } from '../../../Redux/chartReducer'\r\nimport { historyTransactionsSelector } from '../../../Redux/selectors/billSelectors'\r\nimport s from './Journaltem.module.css'\r\n\r\ntype TableItemPropsType = {\r\n    id: number\r\n    type: string\r\n    sum: string\r\n    category: string\r\n    desc: string\r\n    date: string\r\n}\r\n\r\nconst TableItem: FC<TableItemPropsType> = ({ id, date, type, sum, category, desc }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const historyTransactions = useSelector(historyTransactionsSelector)\r\n\r\n    const deleteTransaction = () => {\r\n        \r\n        localStore.set('history', historyTransactions.filter((history: TransactionType) => history.id !== id))\r\n        dispatch(deleteTransactionSuccess(id))\r\n\r\n        if(type === 'income'){\r\n            dispatch(outcomeFromBill(sum))\r\n        }else{\r\n            dispatch(incomeToBill(sum))\r\n        }\r\n\r\n        M.toast({html: 'Запись успешно удалена!'})\r\n    }\r\n\r\n    return (\r\n        <tr className={type === 'income' ? s.income : s.outcome}>\r\n            <td>{date}</td>\r\n            <td>{type === 'income' ? 'Доход' : 'Расход'}</td>\r\n            <td>{sum + ' ₴'}</td>\r\n            <td>{category}</td>\r\n            <td>{desc}</td>\r\n            <td>\r\n                <button \r\n                    className={type === 'income' ? s.incomeBtn : s.outcomeBtn} \r\n                    onClick={deleteTransaction}\r\n                >Удалить</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TableItem","import s from './Journal.module.css'\r\nimport { useSelector } from \"react-redux\"\r\nimport { FC } from 'react'\r\nimport { historyTransactionsSelector } from '../../Redux/selectors/billSelectors'\r\nimport Journaltem from './Journaltem/Journaltem'\r\nimport { TransactionType } from '../../Redux/chartReducer'\r\n\r\nconst Journal: FC = () => {\r\n\r\n    const historyTransactions = useSelector(historyTransactionsSelector)\r\n\r\n    if(!historyTransactions.length){\r\n        return <div className={s.noRecords}>Записей пока нет.</div>\r\n    }\r\n\r\n    const tableItems = historyTransactions.map((transaction: TransactionType) => <Journaltem \r\n        key={transaction.id}\r\n        date={transaction.date} \r\n        type={transaction.type} \r\n        sum={transaction.sum}\r\n        category={transaction.category}\r\n        desc={transaction.desc}\r\n        id={transaction.id}\r\n    />)\r\n\r\n    return (\r\n        <div>\r\n            <table className={s.tableJournal}>\r\n            <thead>\r\n                <tr>\r\n                    <td>Дата</td>\r\n                    <td>Тип</td>\r\n                    <td>Сумма</td>\r\n                    <td>Категория</td>\r\n                    <td>Описание</td>\r\n                    <td>Удалить</td>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {tableItems.reverse()}\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Journal","import { AppStateType } from './../reduxStore'\r\n\r\nexport const showModeIncomeSelector = (state: AppStateType) => state.chart.showModeIncome\r\nexport const showTimeModeSelector = (state: AppStateType) => state.chart.showTimeMode\r\nexport const filteredItemsSelector = (state: AppStateType) => state.chart.filteredItems\r\nexport const activeCategorySelector = (state: AppStateType) => state.chart.activeCategory\r\nexport const generalSumSelector = (state: AppStateType) => state.chart.generalSum","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { changeShowModeIncome, setFilteredTransactions } from '../../../../Redux/chartReducer'\r\nimport { historyTransactionsSelector } from '../../../../Redux/selectors/billSelectors'\r\nimport { showModeIncomeSelector } from '../../../../Redux/selectors/chartSelectors'\r\nimport s from './Buttons.module.css'\r\n\r\nconst Buttons = () => {\r\n    const dispatch = useDispatch()\r\n    const showModeIncome = useSelector(showModeIncomeSelector)\r\n    const allTransactions = useSelector(historyTransactionsSelector)\r\n\r\n    const showModeChange = (status: boolean) => {\r\n        dispatch(changeShowModeIncome(status))\r\n    }\r\n    \r\n    useEffect(() => {\r\n        dispatch(setFilteredTransactions(allTransactions))\r\n    }, [showModeIncome])\r\n\r\n    return (\r\n        <div className={s.btns}>\r\n            <span \r\n                onClick={() => showModeChange(true)} \r\n                className={s.btn + ' ' + s.plus + ' ' + (showModeIncome ? s.active : '')}>Доходы</span>\r\n            <span \r\n                onClick={() => showModeChange(false)} \r\n                className={s.btn + ' ' + s.minus + ' ' + (!showModeIncome ? s.active : '')}>Расходы</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Buttons","import { useEffect } from \"react\"\r\nimport M from 'materialize-css'\r\nimport s from './Select.module.css'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { historyTransactionsSelector } from \"../../../../Redux/selectors/billSelectors\"\r\nimport { changeShowTimeMode, setFilteredTransactions } from \"../../../../Redux/chartReducer\"\r\nimport { showTimeModeSelector } from \"../../../../Redux/selectors/chartSelectors\"\r\n\r\nconst Select = () => {\r\n    const dispatch = useDispatch()\r\n    const allTransactions = useSelector(historyTransactionsSelector)\r\n    const showTimeMode = useSelector(showTimeModeSelector)\r\n\r\n    useEffect(() => {\r\n        const elems = document.querySelectorAll('select');\r\n        M.FormSelect.init(elems, {});\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(setFilteredTransactions(allTransactions))\r\n    }, [showTimeMode])\r\n\r\n    return (\r\n        <div className={s.selectContainer}>   \r\n            <select value={showTimeMode} onChange={(e) => {\r\n                dispatch(changeShowTimeMode(e.target.value))\r\n                dispatch(setFilteredTransactions(allTransactions))\r\n            }} >\r\n                <option value=\"day\">Сегодня</option>\r\n                <option value=\"week\">Последняя неделя</option>\r\n                <option value=\"month\">Последний месяц</option>\r\n                <option value=\"year\">Последний год</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select","import Buttons from './Buttons/Buttons'\r\nimport Select from './Select/Select'\r\n\r\nconst ReportsNav = () => {\r\n    return (\r\n        <div>\r\n            <Buttons />\r\n            <Select />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReportsNav","import { FC } from \"react\"\r\n\r\ntype ReportsInfoItemPropsType = {\r\n    date: string\r\n    sum: string\r\n    desc: string\r\n}\r\n\r\nconst ReportsInfoItem: FC<ReportsInfoItemPropsType> = ({ date, sum, desc}) => {\r\n    return (\r\n        <tr>\r\n            <td>{date}</td>\r\n            <td>{sum + ' ₴'}</td>\r\n            <td>{desc}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default ReportsInfoItem","import { useSelector } from 'react-redux'\r\nimport { TransactionType } from '../../../Redux/chartReducer'\r\nimport { activeCategorySelector, filteredItemsSelector } from '../../../Redux/selectors/chartSelectors'\r\nimport s from './ReportsInfo.module.css'\r\nimport ReportsInfoItem from './ReportsInfoItem/ReportsInfoItem'\r\n\r\nconst ReportsInfo = ({  }) => {\r\n    const filteredTransactions = useSelector(filteredItemsSelector)\r\n    const activeCategory = useSelector(activeCategorySelector)\r\n\r\n    const list = filteredTransactions\r\n        .filter((transaction: TransactionType) => transaction.category === activeCategory)\r\n        .map((transaction: TransactionType) => <ReportsInfoItem \r\n            key={transaction.id} \r\n            date={transaction.date} \r\n            sum={transaction.sum} \r\n            desc={transaction.desc} \r\n        /> )\r\n    if(!list.length){\r\n        return <></>\r\n    }\r\n    return (\r\n        <table className={s.table}>\r\n            <thead>\r\n                <tr>\r\n                    <td>Дата</td>\r\n                    <td>Сумма</td>\r\n                    <td>Описание</td>\r\n                </tr>\r\n            </thead> \r\n            <tbody>\r\n                {list}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}   \r\n\r\n\r\nexport default ReportsInfo","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { changeGeneralSum, TransactionType } from '../../../Redux/chartReducer'\r\nimport { filteredItemsSelector, generalSumSelector, showModeIncomeSelector } from '../../../Redux/selectors/chartSelectors'\r\nimport s from './GeneralSum.module.css'\r\n\r\nconst GeneralSum = () => {\r\n    const dispatch = useDispatch()\r\n    const generalSum = useSelector(generalSumSelector)\r\n    const showModeIncome = useSelector(showModeIncomeSelector)\r\n    const filteredTransactions = useSelector(filteredItemsSelector)\r\n\r\n    const bgColorClass = (showModeIncome && s.plus) || (!showModeIncome && s.minus)\r\n    useEffect(() => {\r\n       const generalSum = filteredTransactions.reduce((cur: number, acc: TransactionType) => {\r\n           return cur += +acc.sum\r\n       }, 0)\r\n       dispatch(changeGeneralSum(generalSum))\r\n    }, [filteredTransactions])\r\n    return (\r\n        <div className={`${s.general} ${bgColorClass}`}>Общая сумма: <span className={s.sum}>{generalSum + ' ₴'}</span></div>\r\n    )\r\n}\r\n\r\nexport default GeneralSum","import { Sector } from \"recharts\"\r\n\r\nconst renderActiveShape = (props: any) => {\r\n    const RADIAN = Math.PI / 180;\r\n    const {\r\n      cx,\r\n      cy,\r\n      midAngle,\r\n      innerRadius,\r\n      outerRadius,\r\n      startAngle,\r\n      endAngle,\r\n      fill,\r\n      payload,\r\n      percent,\r\n      value\r\n    } = props;\r\n    const sin = Math.sin(-RADIAN * midAngle);\r\n    const cos = Math.cos(-RADIAN * midAngle);\r\n    const sx = cx + (outerRadius + 10) * cos;\r\n    const sy = cy + (outerRadius + 10) * sin;\r\n    const mx = cx + (outerRadius + 30) * cos;\r\n    const my = cy + (outerRadius + 30) * sin;\r\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n    const ey = my;\r\n    const textAnchor = cos >= 0 ? \"start\" : \"end\";\r\n  \r\n    return (\r\n      <g>\r\n        <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\r\n          {payload.name}\r\n        </text>\r\n        <Sector\r\n          cx={cx}\r\n          cy={cy}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          startAngle={startAngle}\r\n          endAngle={endAngle}\r\n          fill={fill}\r\n        />\r\n        <Sector\r\n          cx={cx}\r\n          cy={cy}\r\n          startAngle={startAngle}\r\n          endAngle={endAngle}\r\n          innerRadius={outerRadius + 6}\r\n          outerRadius={outerRadius + 10}\r\n          fill={fill}\r\n        />\r\n        <path\r\n          d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\r\n          stroke={fill}\r\n          fill=\"none\"\r\n        />\r\n        <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n        <text\r\n          x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n          y={ey}\r\n          textAnchor={textAnchor}\r\n          fill=\"#333\"\r\n        >{`${value} ₴`}</text>\r\n        <text\r\n          x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n          y={ey}\r\n          dy={18}\r\n          textAnchor={textAnchor}\r\n          fill=\"#999\"\r\n        >\r\n          {`(${(percent * 100).toFixed(2)}%)`}\r\n        </text>\r\n      </g>\r\n    );\r\n  };\r\n\r\nexport default renderActiveShape","import React, { FC, MouseEvent, useEffect, useState } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { PieChart, Pie} from \"recharts\"\r\nimport s from './Chart.module.css'\r\nimport renderActiveShape from \"./RenderActiveShape\"\r\nimport { ChartDataType } from './ChartContainer'\r\n\r\ntype ChartPropsType = {\r\n    data: Array<ChartDataType>\r\n    fill: string\r\n    activeIndex: number\r\n    onPieEnter:  any\r\n}\r\n\r\nconst Chart: FC<ChartPropsType> = ({ data, fill, onPieEnter, activeIndex }) => {\r\n    const [innerRadius, setinnerRadius] = useState(80)\r\n    const [outerRadius, setOuterRadius] = useState(100)\r\n\r\n    const resizeHandler = () => {\r\n        if(window.innerWidth < 600 && innerRadius === 80 && outerRadius === 100 ){\r\n            setinnerRadius(100)\r\n            setOuterRadius(130)\r\n        }else{\r\n            setinnerRadius(80)\r\n            setOuterRadius(100)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        resizeHandler()\r\n        window.addEventListener('resize', resizeHandler)\r\n        return () => {\r\n            window.removeEventListener('resize', resizeHandler)\r\n        }\r\n    }, [])\r\n\r\n    if(!data.length){\r\n        return <div className={s.noRecords}>Записей пока нет. Выберите другой фильтр или <NavLink to='/add/income'>добавьте новую запись</NavLink>.</div>\r\n    }\r\n\r\n    return (\r\n        <PieChart width={600} height={400}>\r\n            <Pie\r\n              activeIndex={activeIndex}\r\n              activeShape={renderActiveShape}\r\n              data={data}\r\n              cx={290}\r\n              cy={170}\r\n              innerRadius={innerRadius}\r\n              outerRadius={outerRadius}\r\n              fill={fill}\r\n              dataKey=\"value\"\r\n              onMouseEnter={onPieEnter}\r\n            />\r\n        </PieChart>\r\n    );\r\n  }\r\n\r\n\r\nexport default Chart\r\n","import React, { FC, useCallback, useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { setActiveCategory, TransactionType } from \"../../../Redux/chartReducer\"\r\nimport { filteredItemsSelector, showModeIncomeSelector } from \"../../../Redux/selectors/chartSelectors\"\r\nimport Chart from './Chart'\r\n\r\nexport type ChartDataType = {\r\n    name: string\r\n    value: number\r\n}\r\n\r\nconst ChartContainer: FC = () => {\r\n    const dispatch = useDispatch()\r\n    const filteredTransactions = useSelector(filteredItemsSelector)\r\n    const showModeIncome = useSelector(showModeIncomeSelector)\r\n\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n    const onPieEnter = useCallback(\r\n        (_, index) => {\r\n            setActiveIndex(index)\r\n        },\r\n        [setActiveIndex]\r\n    );\r\n\r\n    const fill = showModeIncome ? '#31a626' : '#d40202'\r\n\r\n    const data: Array<ChartDataType> = []\r\n    if(filteredTransactions.length){\r\n        filteredTransactions.forEach((transaction: TransactionType) => {\r\n        const i = data.findIndex(has => has.name === transaction.category)\r\n        if(i !== -1){\r\n            data[i].value += +transaction.sum\r\n        }else{\r\n            data.push({\r\n                name: transaction.category,\r\n                value: +transaction.sum\r\n            })\r\n        }\r\n      });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(data.length){\r\n            if(data[activeIndex]){\r\n                dispatch(setActiveCategory(data[activeIndex].name))\r\n            }else{\r\n                dispatch(setActiveIndex(0))\r\n            }\r\n        }\r\n      }, [activeIndex, data])\r\n\r\n    return <Chart data={data} fill={fill} onPieEnter={onPieEnter} activeIndex={activeIndex} />\r\n}\r\n\r\nexport default ChartContainer","import s from './Reports.module.css'\r\nimport ReportsNav from './ReportsNav/ReportsNav'\r\nimport ReportsInfo from './ReportsInfo/ReportsInfo'\r\nimport GeneralSum from './GeneralSum/GeneralSum'\r\nimport ChartContainer from './Chart/ChartContainer'\r\n\r\nconst Reports = () => {\r\n    return (\r\n        <div className={s.container}>\r\n            <ReportsNav />\r\n            <GeneralSum />\r\n            <div className={s.main}>\r\n                <ChartContainer />\r\n                <ReportsInfo />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reports","const addZero = (num: number | string) => num <= 9 ? num = '0' + num : num\r\n    \r\nconst getCurrentDate = () => {\r\n    const date = new Date()\r\n    const day = date.getDate()\r\n    const month = date.getMonth() + 1\r\n    const year = date.getFullYear()\r\n    return `${addZero(day)}.${addZero(month)}.${year}`\r\n}\r\n\r\nexport default getCurrentDate","import { FC } from 'react'\r\nimport { Field, Validator } from 'redux-form'\r\nimport s from './FieldCreator.module.css'\r\nimport formControlStyle from './FormControl.module.css'\r\n\r\ntype FormControlPropsType = {\r\n    meta: {\r\n        touched: boolean\r\n        error: string\r\n    }\r\n}\r\n\r\nconst FormControl: FC<FormControlPropsType> = ({ meta, children }) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={formControlStyle.formControls + ' ' + (hasError && formControlStyle.error)}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { <span className={formControlStyle.errorMessage}>{ hasError && meta.error }</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n    const {input, meta, ...restProps} = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <input \r\n                {...input}\r\n                {...restProps}\r\n            />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const FieldCreator = ( addModePlus: boolean, name: string, text: string, validators: Validator | Validator[] | undefined, type = 'text') => {\r\n    return (\r\n        <label className={s.label}> \r\n            <span className={s.span}>{text}</span>\r\n            <Field \r\n                onFocus={(e: any) => e.target.labels[0].classList.add(s.set, addModePlus ? s.setPlus : s.setMinus) } \r\n                onBlur={(e: any) =>{ e.target.labels[0].classList.remove(e.target.value ? s.none : s.set, s.setPlus, s.setMinus)}}\r\n                className={s.input} \r\n                component={Input} \r\n                name={name}\r\n                type={type}\r\n                validate={validators}\r\n                autoComplete='off' \r\n                />\r\n        </label>\r\n    )\r\n}","export const required = (value?: string) => value ? undefined : 'Это поле не может быть пустым'\r\n","import { InjectedFormProps, reduxForm } from \"redux-form\"\r\nimport s from './AddForm.module.css'\r\nimport fieldStyles from './FieldCreator/FieldCreator.module.css'\r\nimport { FieldCreator } from './FieldCreator/FieldCreator'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport React, { ComponentType, FC, FormEventHandler } from \"react\"\r\nimport { useEffect } from \"react\"\r\nimport { reset } from 'redux-form'\r\nimport { required } from '../../../utilts/validators'\r\nimport { addModePlusSelector } from \"../../../Redux/selectors/billSelectors\"\r\n\r\ntype AddFormPropsType = {\r\n    valid: boolean\r\n    handleSubmit: FormEventHandler<HTMLFormElement>\r\n}\r\n\r\ntype RefType = {\r\n    current: {\r\n        childNodes: Array<ChildNode & {\r\n            classList: any\r\n        }>\r\n    }\r\n}\r\n\r\nconst AddForm: ComponentType<AddFormPropsType & InjectedFormProps<{}, AddFormPropsType, string>> = React.memo(({ handleSubmit, valid }) => {\r\n    const formRef = React.createRef() as RefType\r\n    const dispatch = useDispatch()\r\n    \r\n    const addModePlus = useSelector(addModePlusSelector)\r\n\r\n    const clearInputsClasses = () => {\r\n        formRef.current.childNodes.forEach((el, i) => {\r\n            if(i === 3){\r\n                return false\r\n            }else{\r\n                el.classList.remove(fieldStyles.set)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(reset('add-transaction'))\r\n        clearInputsClasses()\r\n    }, [addModePlus] )\r\n    \r\n    // @ts-ignore\r\n    return ( <form ref={formRef} onSubmit={handleSubmit} className={s.form}>\r\n            { FieldCreator( addModePlus, 'sum', 'Сумма:', required, 'number') }\r\n            { FieldCreator( addModePlus, 'category', 'Категория:', required , 'text') }\r\n            { FieldCreator( addModePlus, 'desc', 'Описание:', undefined) }\r\n            <input onClick={() => valid ? clearInputsClasses() : null} className={ s.btn + ' ' + (addModePlus ? s.btnPlus : s.btnMinus)} type=\"submit\" value=\"Сохранить\" />\r\n        </form>\r\n    )\r\n}) \r\n\r\nexport default reduxForm<{}, AddFormPropsType>({ form: 'add-transaction' })(AddForm)","import { FC, useEffect } from 'react'\r\nimport getCurrentDate from '../../helpers/currentDate'\r\nimport s from './Add.module.css'\r\nimport AddForm from './AddForm/AddForm'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addModePlusSelector, historyTransactionsSelector } from '../../Redux/selectors/billSelectors'\r\nimport { incomeToBill, outcomeFromBill, setNewTransactionSuccess } from '../../Redux/billReducer'\r\nimport { reset } from 'redux-form'\r\nimport localStore from '../../localStore/localStore'\r\nimport { setFilteredTransactions } from '../../Redux/chartReducer'\r\n\r\nexport type FormDataType = {\r\n    sum: string\r\n    category: string\r\n    desc: string\r\n}\r\n\r\nconst Add: FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const addModePlus = useSelector(addModePlusSelector)\r\n    const historyTransactions = useSelector(historyTransactionsSelector)\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        if(!formData.sum || !formData.category){\r\n            M.toast({html: 'Ошибка! Вы не можете сохранить пустую транзакцию!'})\r\n            return false\r\n        }else{\r\n            \r\n            const transactionItem = {\r\n                id: Date.now(),\r\n                type: addModePlus ? 'income' : 'outcome',\r\n                sum: formData.sum,\r\n                category: formData.category,\r\n                desc: formData.desc,\r\n                date: getCurrentDate()\r\n            }\r\n\r\n            dispatch(setNewTransactionSuccess(transactionItem))\r\n            \r\n            if(transactionItem.type === 'income'){\r\n                dispatch(incomeToBill(transactionItem.sum))\r\n            }else{\r\n                dispatch(outcomeFromBill(transactionItem.sum))\r\n            }\r\n    \r\n            dispatch(reset('add-transaction'))\r\n            M.toast({html: 'Запись успешно добавлена!'})\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(historyTransactions.length){\r\n            localStore.set('history', historyTransactions)\r\n        }\r\n    }, [historyTransactions])\r\n\r\n    useEffect(() => {\r\n        dispatch(setFilteredTransactions(historyTransactions))\r\n    }, [historyTransactions])\r\n\r\n    return ( \r\n        <div className={s.container}>\r\n            {/* @ts-ignore */}\r\n            <AddForm onSubmit={onSubmit}/>\r\n            <div className={s.date}>{getCurrentDate()}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Add","import { FC, useEffect } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { compose } from \"redux\"\r\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\"\r\nimport { billSelector } from \"../../../Redux/selectors/billSelectors\"\r\nimport s from '../ModalBill.module.css'\r\n\r\nconst ModalForm: FC<InjectedFormProps<{}, {}> & {}> = ({ handleSubmit, initialize}) => {\r\n    const bill = useSelector(billSelector)\r\n\r\n    useEffect(() => {\r\n        initialize({\r\n            newBill: bill || '0'\r\n        })\r\n    }, [])\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field type=\"number\" name='newBill' component='input'/> \r\n            <button className={s.okBtn} type='submit'>Принять</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default compose(\r\n    reduxForm<{}, {}>({ form: 'currentBill' })\r\n)(ModalForm)","import s from './ModalBill.module.css'\r\nimport ModalForm from './ModalForm/ModalForm'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport './ModalAnim.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { billSelector, historyTransactionsSelector } from '../../Redux/selectors/billSelectors'\r\nimport { modalModeSelector } from '../../Redux/selectors/headerSelectors'\r\nimport { changeBill } from '../../Redux/billReducer'\r\nimport { changeModalMode } from '../../Redux/headerReducer'\r\nimport { SubmitHandler } from 'redux-form'\r\nimport { FC } from 'react'\r\n\r\nconst ModalBill: FC = () => {\r\n    const dispatch = useDispatch()\r\n    const bill = useSelector(billSelector)\r\n    const historyTransactions = useSelector(historyTransactionsSelector)\r\n    const modalMode = useSelector(modalModeSelector)\r\n\r\n    const onSubmit: SubmitHandler<{}, {}, string> = (formData: any) => {\r\n        dispatch(changeBill(+formData.newBill))\r\n        M.toast({html: 'Текущий баланс успешно изменен!'})\r\n        dispatch(changeModalMode(false))\r\n    }\r\n\r\n    const cancelModalMode = () => {\r\n        dispatch(changeModalMode(false))\r\n    }\r\n    \r\n    const defaultHeaderText = (bill === 0 && !historyTransactions.length) ? 'Введите ваш текущий баланс' : 'Текущий баланс'\r\n\r\n    return (\r\n        <>\r\n            <TransitionGroup>\r\n                { modalMode &&\r\n                    <CSSTransition classNames='anim' timeout={400} > \r\n                        <div className={s.layout}>\r\n                            <div className={s.modal}>\r\n                                <button className={s.closeBtn} onClick={cancelModalMode}>&#10006;</button>\r\n                                <h2 className={s.header}>{defaultHeaderText}</h2>\r\n                                <ModalForm onSubmit={onSubmit}/>\r\n                            </div>\r\n                        </div>\r\n                    </CSSTransition>\r\n                }\r\n            </TransitionGroup>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalBill","import s from './manageFormClasses.module.css'\r\n\r\nexport const removeSet = (e: any) => e.target?.labels[0].classList.remove(e.target.value ? s.none : s.set)\r\nexport const addSet = (e: any) => e.target.labels[0].classList.add(s.set)","import React, { FC } from 'react'\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\r\nimport { removeSet, addSet } from '../../../helpers/manageFormClasses'\r\nimport { required } from '../../../utilts/validators'\r\nimport { Input } from '../../Add/AddForm/FieldCreator/FieldCreator'\r\nimport s from './AddPlanForm.module.css'\r\nimport manageFormClasses from '../../../helpers/manageFormClasses.module.css'\r\n\r\n\r\nconst AddPlanForm: FC<InjectedFormProps<{}, {}> & {}> = React.memo(({ handleSubmit, valid }) => {\r\n    const formRef = React.createRef()\r\n\r\n    const clearInputsClasses = () => {\r\n        //@ts-ignore\r\n        formRef.current.childNodes[0].childNodes.forEach(label => label.classList.remove(manageFormClasses.set))\r\n    }\r\n\r\n    //@ts-ignore\r\n    return ( <form ref={formRef} onSubmit={handleSubmit} className={s.form}>\r\n            <div className={s.inputsGroup}>\r\n                <label className={s.label}> \r\n                    <span className={s.span}>Задача:</span>\r\n                    <Field \r\n                        onFocus={addSet} \r\n                        onBlur={removeSet}\r\n                        name='task' \r\n                        component={Input} \r\n                        className={s.input}\r\n                        validate={required} \r\n                        autoComplete='off' \r\n                    />\r\n                </label>\r\n                <label className={s.label}> \r\n                    <span className={s.span}>Необходимая сумма:</span>\r\n                    <Field \r\n                        onFocus={addSet} \r\n                        onBlur={removeSet}\r\n                        name='sum' \r\n                        component={Input} \r\n                        type='number'\r\n                        className={s.input}\r\n                        validate={required} \r\n                        autoComplete='off' \r\n                    />\r\n                </label>\r\n            </div>\r\n            <button onClick={() => valid ? clearInputsClasses() : null} className={s.submit} type='submit'>Добавить</button>\r\n        </form>\r\n    )\r\n})\r\n\r\nexport default reduxForm<{}, {}>({ form: 'add-new-plan' })(AddPlanForm)","import { AppStateType } from './../reduxStore'\r\n\r\nexport const plansSelector = (state: AppStateType) => state.budget.plans\r\nexport const limitsSelector = (state: AppStateType) => state.budget.limits","import { FC } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport localStore from '../../../localStore/localStore'\r\nimport { changeCompletedStatus, deletePlan, PlanType } from '../../../Redux/budgetReducer'\r\nimport { billSelector } from '../../../Redux/selectors/billSelectors'\r\nimport { plansSelector } from '../../../Redux/selectors/budgetSelectors'\r\nimport s from './PlanItem.module.css'\r\n\r\ntype PlanItemPropsType = {\r\n    id: number\r\n    name: string\r\n    completed: boolean\r\n    sum: number\r\n}\r\n\r\nconst PlanItem: FC<PlanItemPropsType> = ({ id, name, completed, sum }) => {\r\n    const dispatch = useDispatch()\r\n    const plans = useSelector(plansSelector)\r\n    const bill = useSelector(billSelector)\r\n\r\n    const progress = Math.round((bill / sum) * 100)\r\n    const progressBar = completed ? 'Выполнено!' : (progress > 100 ? '100%' : progress + '%')\r\n    const removeItem = () => {\r\n        localStore.set('plans', plans.filter((plan: PlanType) => plan.id !== id))\r\n        dispatch(deletePlan(id))\r\n        M.toast({html: 'План успешно удален!'})\r\n    }\r\n\r\n    const toggleCompletedStatus = () => {\r\n        dispatch(changeCompletedStatus(id, !completed))\r\n    }\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <label>\r\n                <input onChange={toggleCompletedStatus} type=\"checkbox\" checked={completed}  />\r\n                <span className={s.name}>{name}</span>\r\n            </label>\r\n            <div title={progressBar} className={s.progress}>\r\n                <div className={s.line}>\r\n                    <div className={s.subline} style={{width: completed ? '100%' : progressBar}}></div>\r\n                </div>\r\n            </div>\r\n            <div className={s.bill}>{completed ? `${sum}₴` : `${bill} / ${sum}`}</div>\r\n            <button onClick={removeItem} className={s.removeBtn}>Удалить</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlanItem","import s from './Planning.module.css'\r\nimport AddPlanForm from './AddPlanForm/AddPlanForm'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addNewPlan, PlanType } from '../../Redux/budgetReducer'\r\nimport { reset } from 'redux-form'\r\nimport { plansSelector } from '../../Redux/selectors/budgetSelectors'\r\nimport localStore from '../../localStore/localStore'\r\nimport { FC, useEffect } from 'react'\r\nimport PlanItem from './PlanItem/PlanItem'\r\n\r\nconst Planning: FC = () => {\r\n    const dispatch = useDispatch()\r\n    const plans = useSelector(plansSelector)\r\n\r\n    const onSubmit = (formData: any) => {\r\n        if(!formData.task || !formData.sum){\r\n            M.toast({html: 'Ошибка! План не может быть пустым!'})\r\n        }else{\r\n            dispatch(addNewPlan({\r\n                id: Date.now(),\r\n                task: formData.task,\r\n                sum: formData.sum,\r\n                completed: false\r\n            }))\r\n            dispatch(reset('add-new-plan'))\r\n            M.toast({html: 'План успешно добавлен!'})\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(plans.length){\r\n            localStore.set('plans', plans)\r\n        }\r\n    },[plans])\r\n\r\n    const planItems = plans.map((plan: PlanType) => <PlanItem\r\n        key={plan.id} \r\n        id={plan.id} \r\n        name={plan.task} \r\n        sum={+plan.sum} \r\n        completed={plan.completed} \r\n    />)\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            {planItems.length ? planItems : <div className={s.noPlans}>Планов пока нет. Добавьте новую задачу.</div>}\r\n            <AddPlanForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Planning","import React, { FC } from 'react'\r\nimport { compose } from 'redux'\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\r\nimport { removeSet, addSet } from '../../../helpers/manageFormClasses'\r\nimport { required } from '../../../utilts/validators'\r\nimport { Input } from '../../Add/AddForm/FieldCreator/FieldCreator'\r\nimport s from '../../Planning/AddPlanForm/AddPlanForm.module.css'\r\nimport s2 from './AddLimitForm.module.css'\r\nimport manageFormClasses from '../../../helpers/manageFormClasses.module.css'\r\n\r\nconst AddLimitForm: FC<InjectedFormProps<{}, {}> & {}> = ({ handleSubmit, valid }) => {\r\n\r\n    const formRef = React.createRef()\r\n\r\n    const clearInputsClasses = () => {\r\n        //@ts-ignore\r\n        formRef.current.childNodes[0].childNodes.forEach(label => label.classList.remove(manageFormClasses.set));\r\n    }\r\n\r\n    // @ts-ignore\r\n    return ( <form ref={formRef} onSubmit={handleSubmit} className={s.form}>\r\n            <div className={s.inputsGroup}>\r\n                <label className={`${s.label} ${s2.label}`}> \r\n                    <span className={s.span}>Категория:</span>\r\n                    <Field \r\n                        onFocus={addSet} \r\n                        onBlur={removeSet}\r\n                        name='category' \r\n                        component={Input} \r\n                        className={`${s.input} ${s2.input}`} \r\n                        validate={required}\r\n                        autoComplete='off'     \r\n                    />\r\n                </label>\r\n                <label className={`${s.label} ${s2.label}`}> \r\n                    <span className={s.span}>Лимит:</span>\r\n                    <Field \r\n                        onFocus={addSet} \r\n                        onBlur={removeSet}\r\n                        name='limit' \r\n                        component={Input}\r\n                        type='number'\r\n                        className={`${s.input} ${s2.input}`}\r\n                        validate={required}\r\n                        autoComplete='off' \r\n                    />\r\n                </label>\r\n                <label className={`${s.label} ${s2.label}`}> \r\n                    <span className={s.span}>Количество дней:</span>\r\n                    <Field \r\n                        onFocus={addSet} \r\n                        onBlur={removeSet}\r\n                        name='days' \r\n                        component={Input}\r\n                        type='number'\r\n                        className={`${s.input} ${s2.input}`}\r\n                        validate={required} \r\n                        autoComplete='off'    \r\n                    />\r\n                </label>\r\n            </div>\r\n            <button onClick={() => valid ? clearInputsClasses() : null} className={s.submit} type='submit'>Добавить</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default compose(\r\n    reduxForm<{}, {}>({ form: 'add-new-limit' })\r\n)(AddLimitForm)","import { FC } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport localStore from '../../../localStore/localStore'\r\nimport { deleteLimit, LimitType } from '../../../Redux/budgetReducer'\r\nimport { TransactionType } from '../../../Redux/chartReducer'\r\nimport { historyTransactionsSelector } from '../../../Redux/selectors/billSelectors'\r\nimport { limitsSelector } from '../../../Redux/selectors/budgetSelectors'\r\nimport s from './LimitItem.module.css'\r\n\r\ntype LimitItemPropsType = {\r\n    id: number\r\n    category: string\r\n    sum: string\r\n    deadline: Array<number>\r\n}\r\n\r\nconst LimitItem: FC<LimitItemPropsType> = ({ id, category, sum, deadline }) => {\r\n    const dispatch = useDispatch()\r\n    const limits = useSelector(limitsSelector)\r\n    const historyTransactions = useSelector(historyTransactionsSelector)\r\n\r\n    const deleteItem = () => {\r\n        dispatch(deleteLimit(id))\r\n        localStore.set('limits', limits.filter((limit: LimitType) => limit.id !== id))\r\n        M.toast({html: 'Лимит успешно удален!'})\r\n    }\r\n\r\n    const targetTransaction: Array<TransactionType> = historyTransactions.filter((transaction: TransactionType) => {\r\n        const date = transaction.date.split('.').reverse()\r\n        date[1] = (+date[1] - 1).toString()\r\n        const transactionDate = new Date(date.join())\r\n        //@ts-ignore\r\n        return transaction.type === 'outcome' && transaction.category === category && transactionDate < new Date(...deadline)\r\n    })\r\n    \r\n\r\n\r\n    let currentCategorySum: number\r\n    if(targetTransaction.length){\r\n        currentCategorySum = targetTransaction.reduce((acc,cur) => {\r\n            return acc += +cur.sum\r\n        }, 0)\r\n    }else{\r\n        currentCategorySum = 0\r\n    }\r\n\r\n    const curDate = [\r\n        new Date().getFullYear(),\r\n        new Date().getMonth(),\r\n        new Date().getDate() \r\n    ]\r\n    const currentDate = new Date(curDate[0], curDate[1], curDate[2])\r\n    const endDate = new Date(deadline[0], deadline[1], deadline[2])\r\n\r\n    //@ts-ignore\r\n    let days = Math.ceil((endDate - currentDate) / (1000 * 60 * 60 * 24))\r\n\r\n    if(days <= 0){\r\n        days = 0\r\n    }\r\n\r\n    const progress = Math.round((currentCategorySum * 100) / +sum)\r\n    const progressLineWidth = progress > 100 ? '100%' : progress + '%'\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.category}>{category}</div>\r\n            <div className={s.days}>Дней осталось: {days}</div>\r\n            <div title={progress <100 && days === 0 ? 'Лимит выполнен!' : progressLineWidth} className={s.progress}>\r\n            { progress >= 100 && <div className={s.alert}>Лимит превышен!</div>}\r\n            { progress <100 && days === 0 && <div className={s.alert}>Лимит выполнен!</div> }\r\n                <div className={s.line}>\r\n                    <div className={`${s.subline} ${progress > 50 ? s.orange : ''} ${progress > 85 ? s.red : ''}` } style={{width: progressLineWidth}}></div>\r\n                </div>\r\n            </div>\r\n            <div className={s.limit}>{currentCategorySum} / {sum}</div>\r\n            <button onClick={deleteItem} className={s.removeBtn} >Удалить</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LimitItem","import s from './Limits.module.css'\r\nimport AddLimitForm from \"./AddLimitForm/AddLimitForm\"\r\nimport { FC, useEffect } from 'react'\r\nimport { reset } from 'redux-form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addNewLimit, LimitType } from '../../Redux/budgetReducer'\r\nimport { limitsSelector } from '../../Redux/selectors/budgetSelectors'\r\nimport localStore from '../../localStore/localStore'\r\nimport LimitItem from './LimitItem/LimitItem'\r\n\r\nconst Limits: FC = () => {\r\n    const dispatch = useDispatch()\r\n    const limits = useSelector(limitsSelector)\r\n    const limitItems = limits.map((limit: LimitType) => <LimitItem \r\n        key={limit.id} \r\n        id={limit.id} \r\n        category={limit.category} \r\n        sum={limit.limit} \r\n        deadline={limit.deadline} \r\n    />)\r\n\r\n    const onSubmit = (formData: any) => {\r\n        if(!formData.category || !formData.limit || !formData.days){\r\n            M.toast({html: 'Ошибка! Лимит не может быть пустым!'})\r\n        }else{\r\n            dispatch(addNewLimit({\r\n                id: Date.now(),\r\n                category: formData.category,\r\n                limit: formData.limit,\r\n                deadline: [\r\n                    new Date().getFullYear(),\r\n                    new Date().getMonth(),\r\n                    new Date().getDate() + +formData.days\r\n                ]\r\n            }))\r\n            dispatch(reset('add-new-limit'))\r\n            M.toast({html: 'Лимит успешно добавлен!'})\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(limits.length){\r\n            localStore.set('limits', limits)\r\n        }\r\n    }, [limits])\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            {limitItems.length ? limitItems : <div className={s.noLimits}>Лимитов пока нет. Добавьте первый.</div>}\r\n            <AddLimitForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Limits\r\n","import { ComponentType, FC } from 'react'\r\nimport { ConnectedComponent } from 'react-redux'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport './withTransition.css'\r\n\r\nconst withTransition = (Component: ConnectedComponent<ComponentType<any>, any> | FC) => {\r\n    return ({match}: any) => {\r\n        return (\r\n            <CSSTransition in={match !== null} classNames='page' timeout={500} unmountOnExit >\r\n                <Component/>\r\n            </CSSTransition>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withTransition","import { FC } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { loadSelector } from '../../../Redux/selectors/billSelectors'\r\nimport './Preloader.css'\r\n\r\nconst Preloader: FC = () => {\r\n    const load = useSelector(loadSelector)\r\n\r\n    if(load){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div id=\"cube-loader\">\r\n            <div className=\"caption\">\r\n            <div className=\"cube-loader\">\r\n                <div className=\"cube loader-1\"></div>\r\n                <div className=\"cube loader-2\"></div>\r\n                <div className=\"cube loader-4\"></div>\r\n                <div className=\"cube loader-3\"></div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import './App.css'\nimport 'materialize-css'\nimport React, { FC, useEffect } from 'react'\nimport { Redirect, Route } from 'react-router'\nimport Header from './Components/Header/Header'\nimport Subheader from './Components/Subheader/Subheader'\nimport Journal from './Components/Journal/Journal'\nimport Reports from './Components/Reports/Reports'\nimport Add from './Components/Add/Add'\nimport ModalBill from './Components/ModalBill/ModalBill'\nimport Planning from './Components/Planning/Planning'\nimport Limits from './Components/Limits/Limits'\nimport withTransition from './HOC/withTransition'\nimport Preloader from './Components/common/Preloader/Preloader'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { changeLoadStatus, synhronizedBillFromLocalStorage, synhronizedHistoryTransactionFromLocalStorage } from './Redux/billReducer'\nimport { synhronizedLimitsFromLocalStorage, synhronizedPlansFromLocalStorage } from './Redux/budgetReducer'\nimport localStore from './localStore/localStore'\nimport { billSelector, historyTransactionsSelector, loadSelector } from './Redux/selectors/billSelectors'\nimport { changeModalMode } from './Redux/headerReducer'\n\nconst App: FC = () => {\n    const dispatch = useDispatch()\n    const bill = useSelector(billSelector)\n    const historyTransactions = useSelector(historyTransactionsSelector)\n    const load = useSelector(loadSelector)\n\n    useEffect(() => {\n        const history = localStore.get('history')\n        if(history && history.length){\n            dispatch(synhronizedHistoryTransactionFromLocalStorage(history))\n        }\n\n        const bill = localStore.get('bill')\n        if(bill){\n            dispatch(synhronizedBillFromLocalStorage(bill))\n        }\n\n        const plans = localStore.get('plans')\n        if(plans){\n            dispatch(synhronizedPlansFromLocalStorage(plans))\n        }\n\n        const limits = localStore.get('limits')\n        if(limits){\n            dispatch(synhronizedLimitsFromLocalStorage(limits))\n        }\n\n        dispatch(changeLoadStatus(true))\n    }, [])\n\n    useEffect(() => {\n        localStore.set('bill', bill)         \n    }, [bill])\n      \n    useEffect(() => {\n        if(bill === 0 && !historyTransactions.length && !localStore.get('history') && load){\n            dispatch(changeModalMode(true))\n        }else{\n            dispatch(changeModalMode(false))\n        }\n    }, [load])\n\n    return (\n        <div className='app'>\n            <Preloader />\n            {/* @ts-ignore */}\n            <Header/>\n            <Subheader/>\n\n            <Route path='/'><Redirect to='/add'/></Route>\n            <Route path='/add'>{withTransition(Add)}</Route>\n            <Route path='/statistics/journal'>{withTransition(Journal)}</Route>\n            <Route path='/statistics/reports'>{withTransition(Reports)}</Route>\n            <Route path='/budget/planning'>{withTransition(Planning)}</Route>\n            <Route path='/budget/limits'>{withTransition(Limits)}</Route>\n\n            <ModalBill />\n        </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\nimport { HashRouter } from 'react-router-dom'\nimport store from './Redux/reduxStore'\nimport { Provider } from 'react-redux'\nimport App from './App'\n\n\nReactDOM.render(\n    <HashRouter>\n      <Provider store={store} >\n        <App />\n      </Provider>\n    </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1d4RP\",\"nav\":\"Header_nav__3GZJh\",\"link\":\"Header_link__3pubE\",\"active\":\"Header_active__1Qeeu\",\"bill\":\"Header_bill__25EuG\",\"cur\":\"Header_cur__2TP6S\",\"burger\":\"Header_burger__ul86A\",\"line\":\"Header_line__1qhOJ\",\"show\":\"Header_show__2h0Vw\",\"marginHeader\":\"Header_marginHeader__1kVWW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"set\":\"manageFormClasses_set__166Ce\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btns\":\"Buttons_btns__18TpQ\",\"btn\":\"Buttons_btn__1ecI4\",\"plus\":\"Buttons_plus__1Amv0\",\"minus\":\"Buttons_minus__2Twv9\",\"active\":\"Buttons_active__2ITAu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"PlanItem_item__2s2m1\",\"name\":\"PlanItem_name__T528z\",\"progress\":\"PlanItem_progress__1v43V\",\"line\":\"PlanItem_line__3nvsn\",\"subline\":\"PlanItem_subline__1sZkO\",\"bill\":\"PlanItem_bill__3oR-3\",\"removeBtn\":\"PlanItem_removeBtn__eMsSG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"ModalBill_layout__1qcnw\",\"modal\":\"ModalBill_modal__3qgTe\",\"closeBtn\":\"ModalBill_closeBtn__7dK_Y\",\"header\":\"ModalBill_header__1jkTM\",\"okBtn\":\"ModalBill_okBtn__2MO0Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"AddLimitForm_label__16S3s\",\"input\":\"AddLimitForm_input__3CaBn\"};"],"sourceRoot":""}